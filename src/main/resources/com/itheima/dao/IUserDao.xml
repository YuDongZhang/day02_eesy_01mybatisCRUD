<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这里面的方法都要和 IuserDao 这个类中的方法来对应的-->
<mapper namespace="com.itheima.dao.IUserDao">
<!--要注意里面的结果类型和参数类型-->
<!--查询所有-->
    <select id="findAll" resultType="com.itheima.domain.User">
        select * from user ;
    </select>
<!---->
<!-- 保存用户-->
    <insert id="saveUser" parameterType="com.itheima.domain.User">
-- 配置插入操作后, 获取数据的id  ,keyProperty 对应实体类 , keyColumn 对应数据库 , order 操作的先后
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{username},#{address},#{sex},#{birthday});
    </insert>

<!--    更新用户-->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};
    </update>

<!--    删除用户的操作 ,注意下面的 id 并不是一定要写id , 只是个占位的 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{id};
    </delete>

<!--    根据id查询用户-->
    <select id="findById" parameterType="int" resultType="com.itheima.domain.User">
        select * from USER where id=#{uid};
    </select>
    
<!--    根据名称模糊查询-->
    <select id="findByName" parameterType="string" resultType="com.itheima.domain.User">
        select * from user where username like #{name};
    </select>

<!--    获取用户的总的记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user;
    </select>

    <!--    根据 queryVo查询用户-->
    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultType="com.itheima.domain.User">
        select * from user where username like #{user.username};
    </select>

</mapper>